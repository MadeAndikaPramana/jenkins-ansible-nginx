Started by user Andika Pramana
Obtained Jenkinsfile from git https://github.com/MadeAndikaPramana/jenkins-ansible-nginx.git
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/jenkins_home/workspace/nginx-deployment
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
Cloning the remote Git repository
Cloning repository https://github.com/MadeAndikaPramana/jenkins-ansible-nginx.git
 > git init /var/jenkins_home/workspace/nginx-deployment # timeout=10
Fetching upstream changes from https://github.com/MadeAndikaPramana/jenkins-ansible-nginx.git
 > git --version # timeout=10
 > git --version # 'git version 2.39.5'
 > git fetch --tags --force --progress -- https://github.com/MadeAndikaPramana/jenkins-ansible-nginx.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/MadeAndikaPramana/jenkins-ansible-nginx.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 9557b171e2a5e3ce746b0e58fb3e826141ae42f7 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 9557b171e2a5e3ce746b0e58fb3e826141ae42f7 # timeout=10
Commit message: "Initial commit"
First time build. Skipping changelog.
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Checkout)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/nginx-deployment/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/MadeAndikaPramana/jenkins-ansible-nginx.git # timeout=10
Fetching upstream changes from https://github.com/MadeAndikaPramana/jenkins-ansible-nginx.git
 > git --version # timeout=10
 > git --version # 'git version 2.39.5'
 > git fetch --tags --force --progress -- https://github.com/MadeAndikaPramana/jenkins-ansible-nginx.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 9557b171e2a5e3ce746b0e58fb3e826141ae42f7 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 9557b171e2a5e3ce746b0e58fb3e826141ae42f7 # timeout=10
Commit message: "Initial commit"
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test SSH Connection)
[Pipeline] dir
Running in /var/jenkins_home/workspace/nginx-deployment/ansible
[Pipeline] {
[Pipeline] sh
+ ansible webservers -m ping -i inventory.ini
[WARNING]: Host 'ubuntu-target' is using the discovered Python interpreter at '/usr/bin/python3.12', but future installation of another Python interpreter could cause a different interpreter to be discovered. See https://docs.ansible.com/ansible-core/2.19/reference_appendices/interpreter_discovery.html for more information.
ubuntu-target | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3.12"
    },
    "changed": false,
    "ping": "pong"
}
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy NGINX)
[Pipeline] dir
Running in /var/jenkins_home/workspace/nginx-deployment/ansible
[Pipeline] {
[Pipeline] sh
+ ansible-playbook -i inventory.ini playbook.yml

PLAY [Install and Start NGINX] *************************************************

TASK [Gathering Facts] *********************************************************
[WARNING]: Host 'ubuntu-target' is using the discovered Python interpreter at '/usr/bin/python3.12', but future installation of another Python interpreter could cause a different interpreter to be discovered. See https://docs.ansible.com/ansible-core/2.19/reference_appendices/interpreter_discovery.html for more information.
ok: [ubuntu-target]

TASK [Update apt cache] ********************************************************
ok: [ubuntu-target]

TASK [Install NGINX] ***********************************************************
changed: [ubuntu-target]

TASK [Start NGINX service] *****************************************************
ok: [ubuntu-target]

TASK [Verify NGINX is running] *************************************************
ok: [ubuntu-target]

TASK [Display NGINX status] ****************************************************
ok: [ubuntu-target] => {
    "msg": "NGINX is running"
}

PLAY RECAP *********************************************************************
ubuntu-target              : ok=6    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Verify NGINX)
[Pipeline] dir
Running in /var/jenkins_home/workspace/nginx-deployment/ansible
[Pipeline] {
[Pipeline] sh
+ ansible webservers -m shell -a curl -s http://localhost -i inventory.ini
[WARNING]: Host 'ubuntu-target' is using the discovered Python interpreter at '/usr/bin/python3.12', but future installation of another Python interpreter could cause a different interpreter to be discovered. See https://docs.ansible.com/ansible-core/2.19/reference_appendices/interpreter_discovery.html for more information.
ubuntu-target | CHANGED | rc=0 >>
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
âœ… NGINX deployed successfully!
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS

